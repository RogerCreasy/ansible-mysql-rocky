- name: Make sure pymysql is present
  become: true
  pip:
    name: pymysql
    state: present

- name: Install MySQL
  become: true
  dnf:
    state: installed
    pkg: mysql-server

- name: start and enable MySQL
  service:
    name: mysqld
    state: started
    enabled: yes

- name: MySQL set root pwd
  mysql_user:
    user: "root"
    password: "{{ mysql_root_pwd }}"
    host: localhost

- name: Secure the MySQL root user for IPV6 localhost (::1)
  mysql_user:
    login_user: "root"
    login_password: "{{ mysql_root_pwd }}"
    user: "root"
    password: "{{ mysql_root_pwd }}"
    host: "::1"

- name: Secure the MySQL root user for IPV4 localhost (127.0.0.1)
  mysql_user:
    login_user: "root"
    login_password: "{{ mysql_root_pwd }}"
    user: "root"
    password: "{{ mysql_root_pwd }}"
    host: "127.0.0.1"

- name: mysql remove anonymous user
  mysql_user:
    login_user: "root"
    login_password: "{{ mysql_root_pwd }}"
    user: ""
    state: absent

- name: Remove the MySQL test database
  mysql_db:
    login_user: "root"
    login_password: "{{ mysql_root_pwd }}"
    db: test
    state: absent

- name: Add MySQL application users
  mysql_user:
    login_user: "root"
    login_password: "{{ mysql_root_pwd }}"
    user: "{{ item.name }}"
    password: "{{ item.pwd }}"
    priv: "{{ item.name }}.*:DELETE,INSERT,SELECT,UPDATE"
  with_items:
    - "{{ app_users }}"

- name: add schemas
  mysql_db:
    login_user: "root"
    login_password: "{{ mysql_root_pwd }}"
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ schemas }}"

- name: Copy database dump files
  copy:
    src: "{{ item }}"
    dest: /tmp/{{ item }}.gz
  with_items:
    - "{{ schemas }}"

- name: gunzip dump files
  command: gunzip /tmp/{{ item }}.gz
  with_items:
    - "{{ schemas }}"

- name: Restore database
  mysql_db:
    login_user: "root"
    login_password: "{{ mysql_root_pwd }}"
    name: "{{ item }}"
    state: import
    target: /tmp/{{ item }}
  with_items:
    - "{{ schemas }}"

- name: Include Backup config, if set
  include_role:
    name: mysql_backup
  when: "{{ backup }} == true"
